// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?       @updatedAt
  username      String
  email         String          @unique
  password      String
  permissions   String[]        @default(["read", "write", "delete"])
  role          Role            @relation(fields: [roleId], references: [id])
  roleId        Int
  folder        Folder[]
  file          File[]
  sharedFolders SharedFolders[]
}

model Role {
  id    Int    @id @default(autoincrement())
  title String @unique
  user  User[]
}

model Folder {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  title         String
  files         File[]
  user          User?           @relation(fields: [owner], references: [id])
  owner         String
  sharedFolders SharedFolders[]
}

model File {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  data      Json
  user      User     @relation(fields: [owner], references: [id])
  owner     String
  folder    Folder   @relation(fields: [folderId], references: [id])
  folderId  String
}

model SharedFolders {
  id       String @id @default(cuid())
  folder   Folder @relation(fields: [folderId], references: [id])
  folderId String
  user     User   @relation(fields: [userId], references: [id])
  userId   String
}
